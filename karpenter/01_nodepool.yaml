# kubectl apply -f 01_nodepool.yaml
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    metadata:
       labels:
          node-auto-scaling: karpenter
    spec:
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: Never
      requirements:
        - key: "node.kubernetes.io/instance-type"
          operator: In
          values: ["t3.small"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 30s
  limits:
    cpu: "100"
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiSelectorTerms:
    - alias: al2023@latest
  role: KarpenterNodeRole- # Cluster Name (my-cluster => KarpenterNodeRole-my-cluster)
  securityGroupSelectorTerms:
  - tags:
      aws:eks:cluster-name: # Cluster Name
  subnetSelectorTerms:
  - tags:
      aws:cloudformation:logical-id: PrivateSubnet*